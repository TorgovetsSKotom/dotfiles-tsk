;; Profile vars
(defvar IMAGE "images/profile.jpg")
(defvar NAME "TSK")
(defpoll UNAME :interval "5m" `whoami`)

;; System vars
(defpoll HOST :interval "5s" `hostname`)
(defpoll CPU_USAGE :interval "1s" `scripts/sys_info --cpu`)
(defpoll MEM_USAGE :interval "1s" `scripts/sys_info --mem`)
(defpoll BLIGHT :interval "1s" `scripts/sys_info --blight`)
(defpoll BATTERY :interval "5s" `scripts/sys_info --bat`)

;; Time vars
(defpoll HOUR :interval "5s" `date +\"%I\"`)
(defpoll MIN :interval "5s" `date +\"%M\"`)
(defpoll MER :interval "5s" `date +\"%p\"`)
(defpoll DAY :interval "5s" `date +\"%A\"`)

;; Uptime vars
(defpoll UPHOUR :interval "5s" `uptime -p | awk '{print $2 \" \" $3}' | sed 's/,//g'`)
(defpoll UPMIN :interval "5s" `uptime -p | awk '{print $4 \" \" $5}'`)

(defvar foo "initial value")

(defvar time-visible false)

(defpoll time :interval "1s"
  :initial "initial-value"
  :run-while time-visible
  `date +%H:%M:%S`)


(defwidget greeter [?text name]
  (box :orientation "horizontal"
       :halign "center"
    text
    (button :onclick "notify-send 'Hello' 'Hello, ${name}'"
      "Greet")))

(defwidget labeled-container [name]
  (box :class "container"
    name
    (children)))


(defwindow widget
  :monitor 0
  :stacking "bg"
  :windowtype "dock"
  :wm-ignore false
  :reserve (struts :distance "40px" :side "top")
  :geometry (geometry
    :x "0%"
    :y "20%"
    :width "50px"
    :height "30px"
    :anchor "top center")
  "test")

(defwindow time
  :monitor 0
  :stacking "bg"
  :windowtype "dock"
  :wm-ignore false
  :reserve (struts :distance "40px" :side "top")
  :geometry (geometry
    :x "0%"
    :y "20%"
    :width "50px"
    :height "30px"
    :anchor "top center")
  time)

(defwindow dock
  :monitor 0
  :stacking "fg"
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry
    :x "0%"
    :y "20px"
    :width "90%"
    :height "30px"
    :anchor "top center")
  (labeled-container :name foo
    (greeter :text "Say hello!"
      :name "Tim")
    (button :onclick "notify-send hey ho"
      "click me")))

(defwindow stats
  :monitor 0
  :stacking "bg"
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry :x "5%"
    :y "20%"
    :width "80px"
    :height "60px"
    :anchor "top center")
  (box :orientation "v"
  ; EWW_TEMPS
  ; EWW_RAM
  ; EWW_DISK
  ; EWW_CPU
  ; EWW_NET
  ; EWW_TIME
  ; EWW_CMD
  `CPU: ${CPU_USAGE}%`
  `MEM: ${MEM_USAGE}%`
  )
)